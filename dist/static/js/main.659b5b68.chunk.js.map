{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectLists.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","conifg/fbConfig.js","index.js"],"names":["connect","dispatch","singOut","getState","firebase","getFirebase","auth","signOut","then","type","logout","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Notification","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","error","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","useFirestoreForProfile","useProfile","attachAuthIsReady","AuthIsLoaded","children","useSelector","isLoaded","config","userProfile","rrfProps","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.659b5b68.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a href='#signout' onClick={props.singOut}>Log out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        singOut: () => { dispatch(signOut()) }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password,\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n        firebase.logout()\r\n    }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            //specific document id\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className='right'>\r\n            <li><NavLink to='/signup'>Sign up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log in</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={props.profile} /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className='nav-warpper grey darken-3'>\r\n            <div className='container'>\r\n                <Link to={'/'} className='brand-logo'>MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className='section'>\r\n            <div className=\"card z-depth-1\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(notification => {\r\n                            return (\r\n                                <li key={notification.id}>\r\n                                    <span className=\"pink-text\">{notification.user} </span>\r\n                                    <span>{notification.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-1 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>{project.content}</p>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from \"react\";\r\nimport Notifications from './Notification'\r\nimport ProjectList from '../projects/ProjectLists'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) {\r\n            return <Redirect to='/signin' />\r\n        }\r\n        return (\r\n            <div className='dashboard container'>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        notifications: state.firestore.ordered.notifications,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className='container section project-details'>\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>{project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First name:</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last name:</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title:</label>\r\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project  content:</label>\r\n                        <textarea id=\"content\" className='materialize-textarea' onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","\r\n\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to db\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('create project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.error);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer, \r\n    firestore: firestoreReducer, //retrieve data from db\r\n    firebase: firebaseReducer, //sync auth status with firebase\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore' //db\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBu_TlvtUVbzgZsosd8sHu39fYhWi2LFo8\",\r\n    authDomain: \"marioplan-tutorial-f30f6.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-tutorial-f30f6.firebaseio.com\",\r\n    projectId: \"marioplan-tutorial-f30f6\",\r\n    storageBucket: \"marioplan-tutorial-f30f6.appspot.com\",\r\n    messagingSenderId: \"149869984525\",\r\n    appId: \"1:149869984525:web:23273648945a0a67a7ce44\",\r\n    measurementId: \"G-42ZG4C9SV7\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n// firebase.firestore().settings({ timestampsInSnapshots: true }); //change how firebase works with timestamps\r\nfirebase.firestore();\r\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from \"react-redux-firebase\";\nimport fbConfig from './conifg/fbConfig'\nimport firebase from \"firebase/app\";\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig, { useFirestoreForProfile: true, useProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>splash screen...</div>;\n  return children\n}\n\nconst config = {\n  ...fbConfig,\n  userProfile: 'users',\n  useFirestoreForProfile: true\n};\n\nconst rrfProps = {\n  firebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}